Perguntar o que um comando faz
whatis comando

Saber qual Shell esta sendo usado
echo $0
echo $SHELL

Mostar qual shell o usuario vai logar
tail /etc/passwd

Verificar se o bash esta instalado
sudo dpkg -l | grep bash

Voltar diretorios
../../

Voltar diretorio que estava antes
cd -

Voltar diretorio do usuario
cd ~

Ordena do mais velho para o mais novo
ls -ltr

Processos
ps axu | more

Criar arquivo Vazio ou atualizar horario
touch arquivo

Escrever na tela
echo texto

Sem quebra de linha

echo -n texto

Caracteres especiais

echo -e "texto\n" \t tabulação \n nova linha

Criar arvore diretorios
mkdir -p

Remover sem mensagens de erro
rm -f

Pausar tempo
sleep 10

Numerar linhas que nao estejam em branco
cat -b

Numerar geral
cat -n

Mostra caracteres especiais
cat -A final de linha $

Ler aquivo ao contrario
tac

Ler ultimas 5 linhas
tail -n 5 

Ler primeiras linhas
head

Ler primeiros 10 caracteres
head -C 10

Contar
wc -l linhas -w palavras -m ou -c caracteres
wc -l alunos*

Colocar em ordem alfabetica
sort ou sort -r

Indice de ordenação 
tail /etc/passwd | sort -k3 -t ":" -g

Nao mostra linhas repetidas
sort alunos3.txt | uniq

Mostra linhas que nao estao repetidas
sort alunos3.txt | uniq -u

Mostra linhas que estao repetidas
sort alunos3.txt | uniq -d

Conta as repetições e colocar a resposta ordenada
sort alunos3.txt | uniq -c | sort

Trocar caracteres
cat alunos3.txt | tr a @
cat alunos3.txt | tr a-z A-Z
cat alunos2.txt | tr '\t' ' '

Deletar caracteres
cat alunos2.txt | tr -d aei

Remove caracteres repetidos em sequencia
echo "Curso de Shell Script" | tr -s 'l'
Curso de Shel Script

Recortar caracters
cat alunos2.txt | cut -c 1-5 ou 1,2,3 ou apos 5 -c5-

Recortar campos
cat alunos2.txt | cut -d " " -f1
tail /etc/passwd | cut -d":" -f1

Diferenca entre arquivos
diff alunos.txt alunos3.txt 
3c3
< Ricardo
---
> Ricardo Prudenciato
9d8
< Maria
diff -w ignora espaços
-b -w -y -u

Pesquisar dentro do arquivo
grep Claudia alunos*
-i -c -v -r -l -A3 -B3

Alterar arquivos
cat alunos2.txt | sed '1,3d' alunos2.txt deletar
cat alunos2.txt | sed '/Rafael/d' alunos2.txt deletar
cat alunos2.txt | sed 's/Paulo/Joao/g' substituir todos

Paginar texto
more
less 
/ pesquisar de cima para baixo n proxima ocorrencia N ocorrencia antrior 
? de baixo para cima

Procurar arquivos
find ./ -name -execfind ./ -name alunos* -exec ls -l {} \;

Data
date +%H Hora
date +%M Minuto
date +%d/%m 03/05

Sequencia
seq 0 5 30

Fazer contas
expr 5 \* 2
bc

Seqencia de Comandos
&& Executa o seguando comando somente se o primeiro nao der erro
|| Executa o segundo comando somente se o primeiro der erro

Diretorio anterior sem sair do diretorio atual
( cd .. ; ls -l )

Redirecionamento
> Limpa e insere
>> Acresenta
2> Erro
>> 2>&1 os dois no mesmo arquivo

Buraco Negro do Shell
/dev/null

Redirecionamento de entrada
tr a Z < alunos.txt

Variavel
VARIAVEL="Valor Atual"
export VARIAVEL 
HORA=`date +%H`
MINUTO=$(date +%M) 
echo $HORA:$MINUTO
13:34

Vi
:1 promeira linha
:$ ultima linha
:20 linha 20
:! Executar comando fora
:/Busca n proximo N anterior
dd remover ou recortar linha
d4d remover numero de linhas 
p colar as linhas
yy copiar
:w salvar
:wq ou :x  salvar e sair
:q! sair sem salvar

Selecionar arquivos
ls -la Aula[Aa][1-5]
ls -la {Aula,AULA}11
ls -la Aula?
ls -la Aula??

Expressoes Regulares
egrep "b[aei]g" texto.txt
egrep "b[a-o]g" texto.txt
egrep "^Linux" texto.txt Primeira palavra da linha
egrep "^#" texto.txt localizar comentarios
egrep -v "^#" texto.txt  listar todas as linhas sem as linhas de comentario
egrep -v "^$" texto.txt retirar linhas em branco
egrep "b[a-i]g*" texto.txt o g pode ou nao aparecer
egrep "b[a-i]g+" texto.txt o g tem que aparecer
egrep "O.Linux" texto.txt o ponto e um caracter
egrep "O.*Linux" texto.txt um caracter e qualquer coisa depois

PATH="$PATH:/home/atila/vsCode/Shell_Script"
vi ~/.profile 

#########################################################
#							#
# primeiroscript.sh - Script de Exemplo do Curso	#
#							#
# Autor: Atila Costa (atilajrc@gmail.com)		#
# Data Criação: 03/05/2021				#
# 							#
# Descrição: 						#
#							#
# Versão: 						#
#							#
#########################################################

Exit Code
$? Retorno 0 ok 1 Erro
exit 10 Codigo de retorno vai ser 10

Entrada Usuario
read VAR1 VAR2 VAR3
read -p "Informe o seu curso: " CURSO

Parametros

# $0 - Nome do Programa
# $# - Quantidade de Parâmetros
# $* - Todos os parâmetros inseridos
# $1-9 - Cada um dos parâmetros

Verificar se uma pasta existe
[ -d ~/MyFolder ]

Verifiacar se existe um arquivo
[ -f ~/exemplo.txt ]

Comparação
test numericas
-eq Igual
-ne Diferente
-gt Maior que
-ge Maior ou igual
-lt Menor que
-le Menor ou igual

test string
= Igual
!= Diferente
-n Não nula
-z Nula

test arquivos
-f E um arquivo
-d E um diretorio
-r Tem permissão de leitura
-w escrita
-x execução
-s Tamanho maior que zero

Negação
! Exclamação
if [ ! "$VAR1" -gt 10 ]

Atender Duas opções
-a
[ "$VAR1" -gt 10 -a "$VAR1" -lt 20 ]

Atender uma ou outra opção
-o

Pesquisar codigo retorno 
echo $?



